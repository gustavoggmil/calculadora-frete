# Instala a biblioteca fpdf (necessário para Google Colab)
!pip install fpdf

from fpdf import FPDF
from datetime import datetime

def calcular_frete(km, eixos, pedagio, icms, taxa_federal, km_por_litro, preco_combustivel, peso_carga, custos_adicionais, lucro):
    seguro_carga = 350.00
    desembarque = 1500.00
    pancard_vale_pedagio = 260.00
    buonny_cadastro_motorista = 60.00
    
    consumo_combustivel = km / km_por_litro
    custo_combustivel = consumo_combustivel * preco_combustivel
    
    taxa_peso = peso_carga * 0.05  # Exemplo de taxa baseada no peso da carga
    
    custo_total = (
        seguro_carga + desembarque + pancard_vale_pedagio + buonny_cadastro_motorista +
        custo_combustivel + pedagio + custos_adicionais + taxa_peso
    )
    
    valor_icms = custo_total * (icms / 100)
    valor_taxa_federal = custo_total * (taxa_federal / 100)
    custo_total_com_impostos = custo_total + valor_icms + valor_taxa_federal
    
    valor_frete = custo_total_com_impostos * (1 + lucro / 100)
    lucro_liquido = valor_frete - custo_total_com_impostos
    
    return valor_frete, custo_total_com_impostos, custo_combustivel, consumo_combustivel, lucro_liquido

def gerar_relatorio(origem, destino, km, eixos, pedagio, icms, taxa_federal, km_por_litro, preco_combustivel, peso_carga, custos_adicionais, lucro, valor_frete, custo_total_com_impostos, custo_combustivel, consumo_combustivel, lucro_liquido):
    data_emissao = datetime.now().strftime("%d/%m/%Y %H:%M")
    nome_arquivo = f"cotacao_frete_{origem}_{destino}.pdf".replace(" ", "_")
    
    pdf = FPDF()  # Correção: Usando a classe FPDF corretamente
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.add_page()
    
    pdf.set_font("Arial", style="B", size=16)
    pdf.cell(200, 10, "MMB Transportes LTDA", ln=True, align='C')
    pdf.cell(200, 10, "RELATÓRIO DE COTAÇÃO DE FRETE", ln=True, align='C')
    pdf.ln(5)
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, f"Data de Emissão: {data_emissao}", ln=True, align='C')
    pdf.ln(10)
    
    tabela_dados = [
        ("Origem", origem, None),
        ("Destino", destino, None),
        ("Distância (km)", f"{km:.2f}", None),
        ("Número de Eixos", str(eixos), None),
        ("Pedágio (R$)", f"R$ {pedagio:.2f}", (255, 0, 0)),
        ("ICMS (%)", f"{icms}%", None),
        ("Taxa Federal (%)", f"{taxa_federal}%", None),
        ("Consumo Médio (km/L)", f"{km_por_litro:.2f}", None),
        ("Preço do Combustível (R$)", f"R$ {preco_combustivel:.2f}", None),
        ("Peso da Carga (kg)", f"{peso_carga:.2f} kg", None),
        ("Custos Adicionais (R$)", f"R$ {custos_adicionais:.2f}", (255, 0, 0)),
        ("Margem de Lucro (%)", f"{lucro}%", None),
        ("Consumo de Combustível (L)", f"{consumo_combustivel:.2f} litros", None),
        ("Custo Total (R$)", f"R$ {custo_total_com_impostos:.2f}", (255, 0, 0)),
        ("Valor do Frete (R$)", f"R$ {valor_frete:.2f}", (0, 0, 255)),
        ("Lucro Líquido (R$)", f"R$ {lucro_liquido:.2f}", (0, 128, 0))
    ]
    
    pdf.set_font("Arial", size=12)
    for titulo, valor, cor in tabela_dados:
        pdf.cell(95, 10, f"{titulo}:", border=1)
        if cor:
            pdf.set_text_color(*cor)
        pdf.cell(95, 10, valor, border=1, ln=True)
        pdf.set_text_color(0, 0, 0)  # Resetar cor padrão
    
    pdf.output(nome_arquivo)
    print(f"Relatório gerado: {nome_arquivo}")

def input_float(msg):
    while True:
        try:
            return float(input(msg).replace(",", "."))  # Permite entrada com vírgula
        except ValueError:
            print("Valor inválido! Digite um número válido.")

# Entrada de dados
origem = input("Digite a origem: ")
destino = input("Digite o destino: ")
distancia = input_float("Digite a distância (km): ")
eixos = int(input("Digite o número de eixos: "))
pedagio = input_float("Digite o valor total de pedágios: ")
icms = input_float("Digite a porcentagem do ICMS: ")
taxa_federal = input_float("Digite a porcentagem da Taxa da Federal: ")
km_por_litro = input_float("Digite o consumo médio da carreta (km/L): ")
preco_combustivel = input_float("Digite o preço do combustível: ")
peso_carga = input_float("Digite o peso da carga (kg): ")
custos_adicionais = input_float("Digite os custos adicionais: ")
lucro = input_float("Digite a porcentagem de lucro da empresa: ")

valor_frete, custo_total, custo_combustivel, consumo_combustivel, lucro_liquido = calcular_frete(
    distancia, eixos, pedagio, icms, taxa_federal, km_por_litro, preco_combustivel, peso_carga, custos_adicionais, lucro)

gerar_relatorio(
    origem, destino, distancia, eixos, pedagio, icms, taxa_federal, km_por_litro, preco_combustivel, peso_carga, custos_adicionais, lucro,
    valor_frete, custo_total, custo_combustivel, consumo_combustivel, lucro_liquido)
